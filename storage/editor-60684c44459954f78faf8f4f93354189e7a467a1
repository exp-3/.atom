{"version":1,"windowDimensions":{"x":449,"y":52,"width":1471,"height":1028,"maximized":false},"grammars":{"grammarOverridesByPath":{}},"project":{"deserializer":"Project","paths":["/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator"],"buffers":[{"id":"dfeec36a92cea1621c8b5121a450ac29","text":"#include <can.h>\n#include \"LPC11xx.h\"\t\t/* LPC11xx register definitions */\n#include \"myinit.h\"\n#include \"flash_nvol.h\"\n#include \"ledcontrol.h\"\n#include \"uart.h\"\n#include \"xprintf.h\"\n\n#define _BV(x) (1 << (x))\n\n#define NVIRTUALNODE 1          /* number of virtual can node */\n#define CAN_DEVKIND_FCIND 0x80\n#define CAN_CMDID_FCIND_SETLIGHT_WITH_PALETTE 0x80\n#define CAN_CMDID_FCIND_SETLIGHT 0x81\n#define CAN_CMDID_FCIND_ENUM 0xFF\n\n#define MSGOBJ_NUM_FCIND_SETLIGHT_WITH_PALETTE MSGOBJ_NUM_USER_MIN\n#define MSGOBJ_NUM_FCIND_SETLIGHT MSGOBJ_NUM_USER_MIN + 1\n\n#define VIRTUAL_NODE_INDEX_FCIND 0\n\n#define NVOL_VAR_DEVINDEX 0     /* NVOL_SetVariableのIdに与える、変数を指す値。 */\n#define NVOL_VAR_DEVSERIAL 1\n\n#define DEVINDEX_DEFAULT 0\n#define DEVSERIAL_DEFAULT 0xFFFFFFFF\n\n#define SYSTICK_CYCLE (AHB_CLOCK / 10000) /* interval of 1ms */\ncan_internal_buffer my_ibuf[NVIRTUALNODE];\nuint32_t my_nodeid_with_flag[NVIRTUALNODE];\nvolatile unsigned char request_sync = 0;\nvolatile unsigned char request_enum = 0;\nvolatile unsigned char request_phyenum = 0;\n\nvoid MySystemInit(void);\n\nvoid ioinit(void)\n{\n  LPC_IOCON->PIO2_7 = (1 << 10); /* RED-LED open-drain */\n  LPC_IOCON->PIO2_8 = (1 << 10); /* GREEN-LED open-drain */\n\n  LPC_IOCON->PIO1_6 = (1 << 0) | (2 << 3); /* RXD, pullup */\n  LPC_IOCON->PIO1_7 = (1 << 0);            /* TXD */\n\n  LPC_GPIO1->DIR = ((1 << 6) | (1 << 7));\n  LPC_GPIO2->DIR = ((1 << 7) | (1 << 8));\n\n  LPC_GPIO2->DATA |= (1 << 7) | (1 << 8);\n}\n\nint main (void)\n{\n  MySystemInit();\n  NVOL_Init();\n  ioinit();\n  led_init();\n\n  /*init for CANbus */\n  uint8_t devindex = can_user_get_devindex();\n  my_nodeid_with_flag[VIRTUAL_NODE_INDEX_FCIND] = can_make_msgid_with_flag_ex(0, CAN_DEVKIND_FCIND, devindex);\n\n  can_begin_init(my_nodeid_with_flag, NVIRTUALNODE, my_ibuf);\n\n  can_init_add_rx(MSGOBJ_NUM_FCIND_SETLIGHT_WITH_PALETTE,\n                  can_make_msgid_with_flag_ex(CAN_CMDID_FCIND_SETLIGHT_WITH_PALETTE,\n                                              CAN_DEVKIND_FCIND, devindex),\n                  MSGID_MASK_EXT_FULL);\n\n  can_init_add_rx(MSGOBJ_NUM_FCIND_SETLIGHT,\n                  can_make_msgid_with_flag_ex(CAN_CMDID_FCIND_SETLIGHT,\n                                              CAN_DEVKIND_FCIND, devindex),\n                  MSGID_MASK_EXT_FULL);\n\n  can_end_init();\n  /* end */\n\n  /* Enable SysTick timer in interval of 1ms */\n  SysTick->LOAD = SYSTICK_CYCLE - 1;\n  SysTick->CTRL = 0x07;\n\n  UARTInit(38400);\n  xdev_in(uart_getc);\n  xdev_out(uart_putc);\n\n  while (1) {\n    //xprintf(\"request_enum: %d, request_phyenum: %d\\r\\n\", request_enum, request_phyenum);\n\t\tif (request_sync) {\n      request_sync = 0;\n    }\n\n    if (request_enum) {\n      request_enum = 0;\n      can_conditional_tx(can_make_msgid_with_flag_ex(CAN_CMDID_FCIND_ENUM, CAN_DEVKIND_FCIND, devindex), 0, 0, 0);\n    }\n\n    if (request_phyenum) {\n      request_phyenum = 0;\n      can_respond_phyenum(can_make_msgid_with_flag_ex(0, CAN_DEVKIND_FCIND, devindex), CAN_RESPOND_PHYENUM_SUPPORT_UPDATE_PHYSERIAL | CAN_RESPOND_PHYENUM_SUPPORT_UPDATE_DEVINDEX);\n    }\n\t}\n\treturn 0;\n}\n\nvoid SysTick_Handler (void)\t\t/* 1kHz Timer ISR */\n{\n    SysTick->CTRL;\t\t/* Clear overflow flag (by reading COUNTFLAG) */\n    led_update();\n    can_tick(1);\n}\n\nvoid can_user_sync(void)\n{\n    request_sync = 1;\n\t/* do nothing because this device get data from host board */\n}\n\nvoid can_user_unicast(int objnum, __attribute__((unused)) uint32_t msgid_with_flag, __attribute__((unused)) int dlc, uint32_t data_0_3, __attribute__((unused)) uint32_t data_4_7)\n{\n  int led_id, color_id, red, green, blue, colorCode;\n  switch(objnum) {\n  case MSGOBJ_NUM_FCIND_SETLIGHT_WITH_PALETTE:\n    for(led_id =0; led_id < 4; led_id++) {\n      color_id = (data_0_3 >> (24 - 8 * led_id)) & 0x7;\n      led_setcolor_with_palette(led_id, color_id);\n    }\n    break;\n\n  case MSGOBJ_NUM_FCIND_SETLIGHT:\n    // 0byte目: ledの選択\n    // 1byte目: red\n    // 2byte目: green\n    // 3byte目: blue\n    led_id = data_0_3 & 0xff;\n    red = (data_0_3 >> 8) & 0xff;\n    green = (data_0_3 >> 16) & 0xff;\n    blue = (data_0_3 >> 24) & 0xff;\n    colorCode = (red << 16) | (green << 8) | blue; //24bitで色を指定\n    led_setcolor(led_id, colorCode);\n    break;\n  }\n}\n\nvoid can_user_enum(void)\n{\n    request_enum = 1;\n}\n\nvoid can_user_timeout(void)\n{\n    /* do nothing because this device is input only. */\n}\n\nvoid can_user_phyenum(void)\n{\n    request_phyenum = 1;\n}\n\nuint32_t can_user_get_physerial(void)\n{\n    uint32_t serial;\n    /* flashからロード */\n    if (NVOL_GetVariable(NVOL_VAR_DEVSERIAL, (UNSIGNED8*)&serial, sizeof(serial)) == FALSE)\n        {\n            /* 読み取り失敗。デフォルト値を使う。 */\n            return DEVSERIAL_DEFAULT;\n        }\n    return serial;\n}\n\nint can_user_set_physerial(uint32_t serial)\n{\n    if (NVOL_SetVariable(NVOL_VAR_DEVSERIAL, (UNSIGNED8*)&serial, sizeof(serial)) == FALSE)\n\t\t{\n\t\t\t/* fail */\n\t\t\treturn 0;\n\t\t}\n    /* suceed */\n    return 1;\n}\n\nuint8_t can_user_get_devindex(void)\n{\n    /* 初回使用時にflashからロードする。 */\n    static unsigned char devindex_loaded = 0;\n\tuint8_t devindex;\n    if (!devindex_loaded) {\n\t\t/* flashからロード */\n\t\tif (NVOL_GetVariable(NVOL_VAR_DEVINDEX, (UNSIGNED8*)&devindex, sizeof(devindex)) == FALSE){\n\t\t\t/* 読み取り失敗。デフォルト値を使う。 */\n\t\t\tdevindex = DEVINDEX_DEFAULT;\n\t\t}\n\t\tdevindex_loaded = 1;\n\t}\n    return devindex;                  /* currently constant value */\n}\n\nint can_user_set_devindex(uint8_t _devindex)\n{\n\n    uint8_t devindex = _devindex;\n    if (NVOL_SetVariable(NVOL_VAR_DEVINDEX, (UNSIGNED8*)&devindex, sizeof(devindex)) == FALSE){\n\t\t/* fail */\n\t\treturn 0;\n\t}\n    /* suceed */\n    return 1;\n}\n\nvoid can_user_phycmd(__attribute__((unused)) uint8_t cmd, __attribute__((unused)) uint8_t op1, __attribute__((unused)) uint16_t op2, __attribute__((unused))uint32_t op3)\n{\n}\n\nvoid can_user_reset(__attribute__((unused)) int virtual_node_index)\n{\n\n}\n","defaultMarkerLayerId":"0","markerLayers":{"0":{"id":"0","maintainHistory":false,"markersById":{"2":{"range":{"start":{"row":0,"column":16},"end":{"row":0,"column":16}},"properties":{},"reversed":false,"tailed":true,"valid":true,"invalidate":"inside"}},"version":2},"1":{"id":"1","maintainHistory":false,"markersById":{},"version":2},"2":{"id":"2","maintainHistory":true,"markersById":{"1":{"range":{"start":{"row":12,"column":44},"end":{"row":12,"column":44}},"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}},"version":2},"4":{"id":"4","maintainHistory":false,"markersById":{},"version":2}},"nextMarkerLayerId":5,"history":{"version":3,"nextCheckpointId":62,"undoStack":[{"type":"group-start","snapshot":{"2":{"1":{"range":[[116,84],[116,84]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[116,84],[116,84]],"newRange":[[116,84],[116,107]],"oldText":"","newText":"__attribute__((unused))"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[116,107],[116,107]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[116,107],[116,107]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[116,107],[116,107]],"newRange":[[116,107],[116,108]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[116,108],[116,108]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[116,160],[116,160]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[116,159],[116,160]],"newRange":[[116,159],[116,159]],"oldText":" ","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[116,159],[116,159]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[116,159],[116,159]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[116,158],[116,159]],"newRange":[[116,158],[116,158]],"oldText":")","newText":""}},{"type":"change","content":{"oldRange":[[116,157],[116,158]],"newRange":[[116,157],[116,157]],"oldText":")","newText":""}},{"type":"change","content":{"oldRange":[[116,156],[116,157]],"newRange":[[116,156],[116,156]],"oldText":"d","newText":""}},{"type":"change","content":{"oldRange":[[116,155],[116,156]],"newRange":[[116,155],[116,155]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[116,154],[116,155]],"newRange":[[116,154],[116,154]],"oldText":"s","newText":""}},{"type":"change","content":{"oldRange":[[116,153],[116,154]],"newRange":[[116,153],[116,153]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[116,152],[116,153]],"newRange":[[116,152],[116,152]],"oldText":"n","newText":""}},{"type":"change","content":{"oldRange":[[116,151],[116,152]],"newRange":[[116,151],[116,151]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[116,150],[116,151]],"newRange":[[116,150],[116,150]],"oldText":"(","newText":""}},{"type":"change","content":{"oldRange":[[116,149],[116,150]],"newRange":[[116,149],[116,149]],"oldText":"(","newText":""}},{"type":"change","content":{"oldRange":[[116,148],[116,149]],"newRange":[[116,148],[116,148]],"oldText":"_","newText":""}},{"type":"change","content":{"oldRange":[[116,147],[116,148]],"newRange":[[116,147],[116,147]],"oldText":"_","newText":""}},{"type":"change","content":{"oldRange":[[116,146],[116,147]],"newRange":[[116,146],[116,146]],"oldText":"e","newText":""}},{"type":"change","content":{"oldRange":[[116,145],[116,146]],"newRange":[[116,145],[116,145]],"oldText":"t","newText":""}},{"type":"change","content":{"oldRange":[[116,144],[116,145]],"newRange":[[116,144],[116,144]],"oldText":"u","newText":""}},{"type":"change","content":{"oldRange":[[116,143],[116,144]],"newRange":[[116,143],[116,143]],"oldText":"b","newText":""}},{"type":"change","content":{"oldRange":[[116,142],[116,143]],"newRange":[[116,142],[116,142]],"oldText":"i","newText":""}},{"type":"change","content":{"oldRange":[[116,141],[116,142]],"newRange":[[116,141],[116,141]],"oldText":"r","newText":""}},{"type":"change","content":{"oldRange":[[116,140],[116,141]],"newRange":[[116,140],[116,140]],"oldText":"t","newText":""}},{"type":"change","content":{"oldRange":[[116,139],[116,140]],"newRange":[[116,139],[116,139]],"oldText":"t","newText":""}},{"type":"change","content":{"oldRange":[[116,138],[116,139]],"newRange":[[116,138],[116,138]],"oldText":"a","newText":""}},{"type":"change","content":{"oldRange":[[116,137],[116,138]],"newRange":[[116,137],[116,137]],"oldText":"_","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[116,137],[116,137]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[116,137],[116,137]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[116,136],[116,137]],"newRange":[[116,136],[116,136]],"oldText":"_","newText":""}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[116,136],[116,136]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[208,21],[208,21]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[208,21],[208,21]],"newRange":[[208,21],[208,44]],"oldText":"","newText":"__attribute__((unused))"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[208,44],[208,44]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[208,44],[208,44]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[208,44],[208,44]],"newRange":[[208,44],[208,45]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[208,45],[208,45]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[116,136],[116,136]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[116,136],[116,136]],"newRange":[[116,136],[116,159]],"oldText":"","newText":"__attribute__((unused))"}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[116,159],[116,159]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"group-start","snapshot":{"2":{"1":{"range":[[116,159],[116,159]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}},{"type":"change","content":{"oldRange":[[116,159],[116,159]],"newRange":[[116,159],[116,160]],"oldText":"","newText":" "}},{"type":"group-end","snapshot":{"2":{"1":{"range":[[116,160],[116,160]],"properties":{"type":"selection","goalScreenRange":null},"reversed":false,"tailed":false,"valid":true,"invalidate":"never"}}}}],"redoStack":[]},"encoding":"utf8","filePath":"/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/main.c","digestWhenLastPersisted":"4846d6f92051c3744bd9818b6b9088cf2f45394c","preferredLineEnding":null,"nextMarkerId":151,"deserializer":"TextBuffer","version":5}]},"workspace":{"deserializer":"Workspace","paneContainer":{"deserializer":"PaneContainer","version":1,"root":{"deserializer":"Pane","id":3,"items":[{"deserializer":"TextEditor","id":20,"softTabs":true,"firstVisibleScreenRow":59,"firstVisibleScreenColumn":0,"displayBuffer":{"deserializer":"DisplayBuffer","id":21,"softWrapped":true,"tokenizedBuffer":{"deserializer":"TokenizedBuffer","bufferPath":"/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/main.c","bufferId":"dfeec36a92cea1621c8b5121a450ac29","largeFileMode":false},"largeFileMode":false,"foldsMarkerLayerId":"1"},"selectionsMarkerLayerId":"2"}],"focused":true,"flexScale":1},"activePaneId":3},"packagesWithActiveGrammars":["language-c","language-hyperlink","language-todo"],"destroyedItemURIs":["/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_broadcast_handler.c","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_headers.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_internal_buffer.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/main.h","/home/takaaki/Workspace/RoboTech/Circuit/fc-indicator-temp/main.c","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/8ca64c52-2bd9-4d3c-928e-793dde05f297.o","/home/takaaki/Workspace/RoboTech/Circuit/fc-indicator-temp/main.c","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/uart.c","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/uart.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/xprintf.c","atom://config","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-esc/main.c","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/xprintf.h","atom://find-and-replace/project-results","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/fcind.c","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_tick.c","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_tick.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_user_function.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_process.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_internal_const.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_broadcast_handler.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/can_internal/can_public_func.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcan/.gitignore","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/.clang_complete","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/canhwdep_avr.d","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/flash_nvol_dummy.dat","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/flash_nvol.c","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/libcanpath","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/write.txt","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/.gcc-flags.json","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/ledcontrol.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/ledcontrol.c","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/.gitmodules","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/flash_nvol.h","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/Doxyfile","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/Makefile","/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/.gitignore"]},"packageStates":{"linter":{"scope":"File"},"find-and-replace":{"findOptions":{"findPattern":"can_cmdid_fcind_setlight","replacePattern":"CAN_CMDID_FCIND_SETLIGHT_WITH_PALETTE","pathsPattern":"","useRegex":false,"wholeWord":false,"caseSensitive":false,"inCurrentSelection":false},"findHistory":["switch","enum","can_devkind_esc","can_CMDID_ESC_SETDUTY","can_CMDID_ESC_ENUM","msgobj_num_esc","msgobj_num_esc_setduty","MSGOBJ_NUM_FCIND_SETLIGHT","throttle","msgobj_num_fcind_setlight","nvol_motor_mode","virtual_node_index_esc","node","virtual_node_index_esc","VIRTUAL_NODE_INDEX_FCIND","4","EX","color_code","colorCode","color","lednum","can_cmdid_fcind_setlight"],"replaceHistory":["CAN_DEVKIND_FCIND","CAN_CMDID_FCIND_SETLIGHT","CAN_CMDID_FCIND_ENUM","MSGOBJ_NUM_FCIND_SETLIGHT","VIRTUAL_NODE_INDEX_FCIND","CAN_CMDID_FCIND_SETLIGHT_WITH_PALETTE"],"pathsHistory":[]},"fuzzy-finder":{"/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator/main.c":1459699341791},"keybinding-resolver":{},"tree-view":{"directoryExpansionStates":{"/home/takaaki/Workspace/RoboTech/Circuit/Firmware.CAN.CAN-fc-indicator":{"isExpanded":true,"entries":{".git":{"isExpanded":false,"entries":{}},"cmsis":{"isExpanded":false,"entries":{}},"libcan":{"isExpanded":false,"entries":{}}}}},"hasFocus":false,"attached":true,"scrollLeft":0,"scrollTop":0,"width":198}},"fullScreen":false}